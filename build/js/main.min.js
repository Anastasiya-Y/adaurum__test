/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./source/js/main.js":
/*!***************************!*\
  !*** ./source/js/main.js ***!
  \***************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_init_chat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/init-chat.js */ \"./source/js/modules/init-chat.js\");\n/* harmony import */ var _modules_init_mediaplan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/init-mediaplan.js */ \"./source/js/modules/init-mediaplan.js\");\n\n\n\nwindow.onload = () => {\n  (0,_modules_init_chat_js__WEBPACK_IMPORTED_MODULE_0__.initChat)();\n  (0,_modules_init_mediaplan_js__WEBPACK_IMPORTED_MODULE_1__.initMediaplan)();\n};\n\n\n//# sourceURL=webpack://test/./source/js/main.js?");

/***/ }),

/***/ "./source/js/modules/init-chat.js":
/*!****************************************!*\
  !*** ./source/js/modules/init-chat.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMyMessage: function() { return /* binding */ createMyMessage; },\n/* harmony export */   createResponseMessage: function() { return /* binding */ createResponseMessage; },\n/* harmony export */   initChat: function() { return /* binding */ initChat; }\n/* harmony export */ });\nconst form = document.querySelector('#form');\nconst chatWindow = document.querySelector('#chat-window');\nconst textArea = document.querySelector('#message-input');\n\nfunction onFormSubmit(evt) {\n  if (chatWindow.querySelectorAll('.message').length === 0) {\n    chatWindow.innerHTML = '';\n    chatWindow.style.justifyContent = 'end';\n  }\n\n  evt.preventDefault();\n  chatWindow.append(createMyMessage());\n\n  setTimeout(() => {\n    chatWindow.append(createResponseMessage());\n  }, 3000);\n}\n\n// My message\n\nconst createMyMessage = (...args) => {\n  let arr = args;\n  // Container\n  const messageContainer = document.createElement('div');\n  messageContainer.classList.add('message', 'message--my-message');\n\n  // Message text\n  const messageText = document.createElement('div');\n  messageText.classList.add('message__text');\n  messageText.innerHTML = getMessageText(arr);\n\n  // Time\n  const messageTime = document.createElement('span');\n  messageTime.classList.add('message__time');\n  messageTime.innerHTML = getDate();\n\n  // Put in the container\n  messageContainer.append(messageText);\n  messageContainer.append(messageTime);\n  textArea.value = '';\n\n  return messageContainer;\n};\n\nconst getMessageText = (...args) => {\n  let messageText;\n  if (textArea.value) {\n    messageText = textArea.value;\n  } else {\n    messageText = args[0];\n  }\n  return messageText;\n};\n\n\nconst getDate = () => {\n  const date = new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'});\n  return date;\n};\n\n// Response message\n\nconst createResponseMessage = (...args) => {\n  // Container\n  const messageContainer = document.createElement('div');\n  messageContainer.classList.add('message', 'message--response-message');\n\n  // Photo of agent\n  const messageAgentPhotoPicture = document.createElement('picture');\n\n  const messageAgentPhotoWebp = document.createElement('source');\n  messageAgentPhotoWebp.setAttribute('type', 'image/webp');\n  messageAgentPhotoWebp.setAttribute('src', 'img/content/photo-jim.webp');\n\n  const messageAgentPhotoPng = document.createElement('img');\n  messageAgentPhotoPng.setAttribute('src', 'img/content/photo-jim.png');\n  messageAgentPhotoPng.setAttribute('width', '49');\n  messageAgentPhotoPng.setAttribute('height', '49');\n  messageAgentPhotoPng.setAttribute('alt', 'Photo of Jim.');\n\n  messageAgentPhotoPicture.append(messageAgentPhotoWebp, messageAgentPhotoPng);\n\n  // Response text\n  const messageText = document.createElement('div');\n  messageText.classList.add('message__text');\n  if (args.length === 0) {\n    messageText.innerHTML = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.';\n  } else {\n    messageText.innerHTML = args[0];\n  }\n\n\n  // Agent info\n  const messageInfo = document.createElement('div');\n  messageInfo.classList.add('message__info');\n\n  const messageAgent = document.createElement('span');\n  messageAgent.classList.add('message__agent');\n  messageAgent.innerHTML = 'Jim';\n\n  // Time\n  const messageTime = document.createElement('span');\n  messageTime.classList.add('message__time');\n  messageTime.innerHTML = getDate();\n\n  // Put agent info\n  messageInfo.append(messageAgent, messageTime);\n\n  // put in the container\n  messageContainer.append(messageAgentPhotoPicture);\n  messageContainer.append(messageText);\n  messageContainer.append(messageInfo);\n  // textArea.value = '';\n\n  return messageContainer;\n};\n\nconst onTextAreaEnterPress = (evt) => {\n  if (evt.ctrlKey && evt.keyCode === 13) {\n    const newEvent = new Event('submit', {cancelable: true});\n    evt.target.form.dispatchEvent(newEvent);\n  }\n};\n\nconst initChat = () => {\n  form.addEventListener('submit', onFormSubmit);\n  textArea.addEventListener('keydown', onTextAreaEnterPress);\n};\n\n\n\n\n//# sourceURL=webpack://test/./source/js/modules/init-chat.js?");

/***/ }),

/***/ "./source/js/modules/init-mediaplan.js":
/*!*********************************************!*\
  !*** ./source/js/modules/init-mediaplan.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initMediaplan: function() { return /* binding */ initMediaplan; }\n/* harmony export */ });\n/* harmony import */ var _init_chat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init-chat.js */ \"./source/js/modules/init-chat.js\");\n\n\nconst mediaplanBtn = document.querySelector('#btn-mediaplan');\nconst chatWindow = document.querySelector('#chat-window');\nconst filesTemplate = document.querySelector('#files__template');\nconst mediaplanContainer = document.querySelector('#files__mediaplan');\nconst mediaplanList = document.querySelector('#files__mediaplan-list');\n\nconst arrAsk = ['Я хочу заказать медиаплан.'];\nconst addResponse = ['Медиаплан за текущий год находится в процессе формирования. Результат Вы можете отслеживать онлайн в разделе \"Файлы\".'];\n\nconst iconStatusLoading = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM8.26136 10.2727L8.34659 4H7.1875L7.27273 10.2727H8.26136ZM7.22585 12.5696C7.37642 12.7202 7.55682 12.7955 7.76705 12.7955C7.90909 12.7955 8.03693 12.7614 8.15057 12.6932C8.26705 12.6222 8.35938 12.5284 8.42756 12.4119C8.49858 12.2955 8.53409 12.1676 8.53409 12.0284C8.53409 11.8182 8.45881 11.6378 8.30824 11.4872C8.15767 11.3366 7.97727 11.2614 7.76705 11.2614C7.55682 11.2614 7.37642 11.3366 7.22585 11.4872C7.07528 11.6378 7 11.8182 7 12.0284C7 12.2386 7.07528 12.419 7.22585 12.5696Z\" fill=\"#949494\"/></svg>';\nconst iconStatusReady = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8Z\" fill=\"#1CC437\"/><path d=\"M3.83333 7.375L5.64226 9.1387C6.41901 9.89604 7.65791 9.89604 8.43466 9.1387L12.1667 5.5\" stroke=\"white\" stroke-width=\"1.5\"/></svg>';\n\nconst textLoading = 'Медиаплан в процессе составления';\nconst textReady = 'Медиаплан от 1.06.22 готов';\nconst onMediaplanBtnClick = (evt) => {\n  // Подготовка чата\n  if (chatWindow.querySelectorAll('.message').length === 0) {\n    chatWindow.innerHTML = '';\n    chatWindow.style.justifyContent = 'end';\n  }\n\n  // Создание запроса\n  evt.preventDefault();\n  chatWindow.append((0,_init_chat_js__WEBPACK_IMPORTED_MODULE_0__.createMyMessage)(arrAsk));\n\n  // Создание ответа от агента\n  setTimeout(() => {\n    chatWindow.append((0,_init_chat_js__WEBPACK_IMPORTED_MODULE_0__.createResponseMessage)(addResponse));\n    initMediaplanContainer();\n  }, 3000);\n};\n\nconst initMediaplanContainer = () => {\n  filesTemplate.style.display = 'none';\n  mediaplanContainer.style.display = 'flex';\n  createMediaplanItems();\n};\n\n\nconst setPause = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst createMediaplanItems = async () => {\n  for (let i = 1; i <= 12; i++) {\n    const mediaplanItem = createMediaplanItem();\n    mediaplanList.prepend(mediaplanItem);\n    await setPause(4050);\n  }\n};\n\n// Mediaplan month counter\nlet counter = 1;\n\nconst createMediaplanItem = () => {\n  // Container\n  const mediaplanItem = document.createElement('li');\n  mediaplanItem.classList.add('files__mediaplan-item');\n\n  const mediaplanItemContainer = document.createElement('div');\n  mediaplanItemContainer.classList.add('files__mediaplan-item-container');\n\n  // Icon file\n  const mediaplanIconFileContainer = document.createElement('div');\n  mediaplanIconFileContainer.classList.add('files__mediaplan-icon-container', 'files__mediaplan-icon-container--file');\n  mediaplanIconFileContainer.innerHTML = '<svg width=\"24\" height=\"24\"><use href=\"img/sprite.svg#icon-file\"></use></svg>';\n\n  // Text\n  const mediaplanText = document.createElement('span');\n  mediaplanText.classList.add('files__mediaplan-text');\n  mediaplanText.innerHTML = `Companyname ${counter++}/23`;\n\n  // Icon file\n  const mediaplanIconRefreshContainer = document.createElement('div');\n  mediaplanIconRefreshContainer.classList.add('files__mediaplan-icon-container', 'files__mediaplan-icon-container--refresh');\n  mediaplanIconRefreshContainer.innerHTML = '<svg width=\"24\" height=\"24\"><use href=\"img/sprite.svg#icon-refresh\"></use></svg>';\n\n  // Mediaplan status container\n  const mediaplanStatusContainer = document.createElement('div');\n  mediaplanStatusContainer.classList.add('files__mediaplan-status-container');\n\n  mediaplanItemContainer.append(mediaplanIconFileContainer);\n  mediaplanItemContainer.append(mediaplanText);\n  mediaplanItemContainer.append(mediaplanIconRefreshContainer);\n  mediaplanItemContainer.append(mediaplanStatusContainer);\n\n  mediaplanItem.append(mediaplanItemContainer, setMediaplanLoadingStatus(mediaplanStatusContainer, iconStatusLoading, textLoading));\n\n  setTimeout(() => {\n    setMediaplanLoadingStatus(mediaplanStatusContainer, iconStatusReady, textReady);\n    mediaplanIconRefreshContainer.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"><path d=\"M17 12L12 17L7 12\" stroke=\"#292D32\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M12 5L12 16\" stroke=\"#292D32\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><line x1=\"5.75\" y1=\"18.25\" x2=\"18.25\" y2=\"18.25\" stroke=\"#292D32\" stroke-width=\"1.5\" stroke-linecap=\"round\"/></svg>';\n    mediaplanIconRefreshContainer.style.backgroundColor = '#f4d4ed';\n\n    setTimeout(() => {\n      mediaplanStatusContainer.remove();\n    }, 2000);\n  }, 2000);\n\n  return mediaplanItem;\n};\n\nconst setMediaplanLoadingStatus = (container, svg, statusText) => {\n  container.innerHTML = '';\n  container.innerHTML = svg;\n\n  const mediaplanStatusText = document.createElement('span');\n  mediaplanStatusText.innerHTML = statusText;\n\n  container.append(mediaplanStatusText);\n\n return container;\n};\n\n\nconst initMediaplan = () => {\n  mediaplanBtn.addEventListener('click', onMediaplanBtnClick);\n};\n\n\n\n\n\n//# sourceURL=webpack://test/./source/js/modules/init-mediaplan.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./source/js/main.js");
/******/ 	
/******/ })()
;